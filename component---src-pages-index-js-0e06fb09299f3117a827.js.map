{"version":3,"file":"component---src-pages-index-js-0e06fb09299f3117a827.js","mappings":"uJAEA,MAAMA,EAAY,YACZC,EAAY,YACZC,EAAkB,0BAClBC,EAAa,yBACbC,EAAa,WAEbC,EAAqB,IAAIC,OAAO,IAAMF,EAAWG,QACjDC,EAA4B,IAAIF,OAAOF,EAAWG,OAASJ,EAAWI,OAAQ,MAC9EE,EAAyB,IAAIH,OAAO,OAASH,EAAWI,OAAQ,MA6ChEG,EAAY,CAACC,EAAOC,KACzB,GAAuB,iBAAVD,IAAsBE,MAAMC,QAAQH,GAChD,MAAM,IAAII,UAAU,gDAiBrB,GAdAH,EAAU,CACTI,YAAY,EACZC,8BAA8B,KAC3BL,GAWiB,KAPpBD,EADGE,MAAMC,QAAQH,GACTA,EAAMO,KAAIC,GAAKA,EAAEC,SACvBC,QAAOF,GAAKA,EAAEG,SACdC,KAAK,KAECZ,EAAMS,QAGLE,OACT,MAAO,GAGR,MAAME,GAAiC,IAAnBZ,EAAQa,OAC3BC,GAAUA,EAAOF,cACjBE,GAAUA,EAAOC,kBAAkBf,EAAQa,QACtCG,GAAiC,IAAnBhB,EAAQa,OAC3BC,GAAUA,EAAOE,cACjBF,GAAUA,EAAOG,kBAAkBjB,EAAQa,QAE5C,GAAqB,IAAjBd,EAAMW,OACT,OAAOV,EAAQI,WAAaY,EAAYjB,GAASa,EAAYb,GAqB9D,OAlBqBA,IAAUa,EAAYb,KAG1CA,EAhFwB,EAACe,EAAQF,EAAaI,KAC/C,IAAIE,GAAkB,EAClBC,GAAkB,EAClBC,GAAsB,EAE1B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAOJ,OAAQW,IAAK,CACvC,MAAMC,EAAYR,EAAOO,GAErBH,GAAmB9B,EAAUmC,KAAKD,IACrCR,EAASA,EAAOU,MAAM,EAAGH,GAAK,IAAMP,EAAOU,MAAMH,GACjDH,GAAkB,EAClBE,EAAsBD,EACtBA,GAAkB,EAClBE,KACUF,GAAmBC,GAAuB/B,EAAUkC,KAAKD,IACnER,EAASA,EAAOU,MAAM,EAAGH,EAAI,GAAK,IAAMP,EAAOU,MAAMH,EAAI,GACzDD,EAAsBD,EACtBA,GAAkB,EAClBD,GAAkB,IAElBA,EAAkBN,EAAYU,KAAeA,GAAaN,EAAYM,KAAeA,EACrFF,EAAsBD,EACtBA,EAAkBH,EAAYM,KAAeA,GAAaV,EAAYU,KAAeA,EAEvF,CAEA,OAAOR,CAAM,EAsDJW,CAAkB1B,EAAOa,EAAaI,IAG/CjB,EAAQA,EAAM2B,QAAQjC,EAAoB,IAGzCM,EADGC,EAAQK,6BAxDwB,EAACN,EAAOa,KAC5CtB,EAAgBqC,UAAY,EAErB5B,EAAM2B,QAAQpC,GAAiBsC,GAAMhB,EAAYgB,MAsD/CvB,CAA6BN,EAAOa,GAEpCA,EAAYb,GAGjBC,EAAQI,aACXL,EAAQiB,EAAYjB,EAAM8B,OAAO,IAAM9B,EAAMyB,MAAM,IAzDjC,EAACzB,EAAOiB,KAC3BpB,EAA0B+B,UAAY,EACtC9B,EAAuB8B,UAAY,EAE5B5B,EAAM2B,QAAQ9B,GAA2B,CAACkC,EAAGC,IAAef,EAAYe,KAC7EL,QAAQ7B,GAAwBmC,GAAKhB,EAAYgB,MAuD5CC,CAAYlC,EAAOiB,EAAY,EAGvCkB,EAAOC,QAAUrC,EAEjBoC,EAAOC,QAAP,QAAyBrC,C,sqBCggBzB,MCjmBasC,EAA2BC,IACC,oBAAhCC,kBACP,YAA6BA,iBAACC,UAgBhC,MAAAT,EAwBEU,IACgC,IAAAC,EAEhC,MA3BwB,CAExBD,IAA4B,IAAAC,EAAAC,EAAA,OAGrBC,QAAC,MAAAH,GAAA,OAAAC,EAAAD,EAAMI,SAAgB,OAAtBF,EAAAD,EAAcI,eAAA,EAAdH,EAAwBI,IAAG,EALX,CA2BFN,GAErBA,EAtB6B,CAE9BA,GACsCG,QAAQ,MAAAH,OAAA,EAAAA,EAAMO,iBAHtB,CAwBFP,GACfA,EAACO,gBApBY,CAE1BP,GACkCG,QAAQ,MAAAH,OAAA,EAAAA,EAAMQ,aAHtB,CAuBFR,GACfA,EAAKQ,YAEH,MAAAR,GAAiB,OAAjBC,EAAJD,EAAMS,sBAAA,EAANR,EAAuBM,eAAA,EAOI,SAAAG,EAGlCV,EACAC,EACAC,GAIA,MAAMrB,EAA8B,CAAC,EAErC,IAAa8B,EAAG,uBAmBhB,MAXe,UAAXT,GACFrB,EAAa+B,MAAQZ,EACrBnB,EAAagC,OAASZ,GACF,gBAAXC,IAKTS,EAAA,yDAGK,CACLG,UAAAH,EACA,4BAA+B,GAC/BI,MAAOlC,EAEX,CA0GgB,SAAYmC,EAC1BhB,EACAC,EACAC,EACArB,EACA8B,GA4BA,YA5BA,IAAAA,IAAAA,EAAuB,CAAC,GAkBnBM,EAAA,GAAAf,EACH,CAAAgB,QAAArC,EACAsC,WAAYnB,EACZ,kBAAqB,GACrBe,MAAKE,EAAA,GACAN,EAAK,CACRS,QAASnB,EAAW,EAAI,KAK9B,UAOmCoB,EACjCrB,EACAC,EACAC,EACArB,EACA8B,EACAW,EACAC,EACAC,GAEA,MAAkBC,EAAkB,CAAC,EAEjCH,IACFG,EAAaC,gBAAkBJ,EAEhB,UAAXpB,GACFuB,EAAab,MAAQ/B,EACrB4C,EAAaZ,OAASF,EACtBc,EAAaC,gBAAkBJ,EAC/BG,EAAaE,SAAW,aACJ,gBAAXzB,GAMW,cAAXA,KALTuB,EAAaE,SAAW,WACxBF,EAAaG,IAAM,EACnBH,EAAaI,KAAO,EACpBJ,EAAaK,OAAS,EACtBL,EAAaM,MAAQ,IAUrBR,IACFE,EAAaO,UAAYT,GAGvBC,IACFC,EAAaQ,eAAiBT,GAEhC,MAAYU,EAAAjB,EAAA,GACPjB,EAAW,CACd,eAAc,EACd,yBAA4B,GAC5Be,MACEE,EAAA,CAAAG,QAASnB,EAAW,EAAI,EACxBkC,WAAkC,wBAC/BV,KAeP,OACFS,CAAA,CCrUA,MAAAE,EAAA,aAkEWC,EAA2C,SAAAC,GAGpD,IAHmEC,OACnEtC,EAAMW,MACNV,EAAKW,OACLhC,GAAAyD,EAEA,MAAe,cAAXrC,EAEAD,EAAAA,cAAiB,wBAAAe,MAAO,CAAEyB,WAAgB3D,EAASqB,EAAS,IAAnB,OAI9B,gBAAXD,EAEAD,EAAAA,cAAA,OAAKe,MAAO,CAAE0B,SAAUvC,EAAOwC,QAAS,UACtC1C,EAAAA,cAAA,OACE2C,IAAI,GACJC,KAAK,eACO,qBACZtC,IAAA,qDAA0DzB,eAAoBqB,uEAC9Ea,MAAO,CACL0B,SAAgB,OAChBC,QAAgB,QAChBf,SAAkB,aAOrB,IACT,EAE0BkB,EAEtB,SAA6C3C,GAAA,IAAtB4C,SAAEjE,GAAoBqB,EAAPS,EAAKoC,EAAA7C,EAAAkC,GAC7C,OACEpC,EAAAA,cAACC,EAAAA,SAAQ,KACPD,EAAAA,cAACqC,EAAUpB,EAAA,GAAAN,IACV9B,EAEmC,KAG1C,EAAAmE,EAAA,8CAAAC,EAAA,oCC1EWC,EAAkC,SAAcjD,GAAA,IAACK,IAC1DJ,EAAGiD,OACHtE,EAAMqC,QACNP,EAAOgC,IACPrB,EAAQ,GAAAH,WACRI,GACGtB,EAAAuB,EAEHuB,EAAA9C,EAAA+C,GAAA,OACEhD,EAAAA,cAAA,MAAAiB,EAAA,GACMO,EAAK,CACT4B,SAAS,QACTlC,QAASP,EACTL,IAAKiB,EAAarB,OAAA,EAAe,WACtBqB,OAAA,EAAarB,EACxBiD,OAAQ5B,EAAa1C,OAAA,EACR,cAAC0C,OAAA,EAAa1C,EAC3B8D,IAAKrB,IAGX,EAEoB+B,EAA2B,SAAgBpD,GAAC,IAAAI,SAC9DH,EAAQoD,QACRzE,EAAU,GAAEsC,WACZR,GAAA,GAEDV,EADIqB,EAEHyB,EAAA9C,EAAAgD,GAAA,MAAA1B,EAAcD,EAAMiC,QAAS,MAAArD,OAAA,EAAAA,EAAUqD,OAAA/B,EAErCxB,EAAAA,cAACkD,EAAUjC,EAAA,GAAAK,EAAWpB,EAAU,CAAAqD,MAAOhC,EAAOJ,WAAYR,KAG5D,OAAK9B,EAAQX,OAAA8B,EAAAA,cAKX,eACGnB,EAAQf,KAAI0F,IAAA,IAAGC,MAAAxD,EAAOkD,OAAAjD,EAAQwD,KAAA7E,GAAA2E,EAAA,OAC7BxD,EAAAA,cAAA,UACE2D,IAAQ,GAAA1D,KAASpB,KAAQqB,IACzBwD,KAAM7E,EACN4E,MAAOxD,EACPkD,OAAQxC,EAAaT,OAAA,EACR,cAACS,OAAA,EAAaT,EAC3BqD,MAAOhC,GAAA,IAGVC,GAAAA,CAGP,ECvFA,IAAAoC,EDyFAV,EAAMW,UAAY,CAChBvD,IAAK4B,EAAAA,OAAiB4B,WACtBnB,IAAKT,EAAAA,OAAiB4B,WACtBP,MAAOrB,EAAAA,OACPiB,OAAQjB,EAAAA,OACRf,WAAYe,EAAAA,MAGdmB,EAAQU,YAAc,UACtBV,EAAQQ,UAAY,CAClBlB,IAAKT,EAAAA,OAAiB4B,WACtB3C,WAAYe,EAAAA,KACZ7B,SAAU6B,EAAAA,MAAgB,CACxB5B,IAAK4B,EAAAA,OAAiB4B,WACtBX,OAAQjB,EAAAA,OACRqB,MAAOrB,EAAAA,SAEToB,QAASpB,EAAAA,QACPA,EAAAA,UAAoB,CAClBA,EAAAA,MAAgB,CACduB,MAAOvB,EAAAA,OAAiB4B,WACxBJ,KAAMxB,EAAAA,OACNqB,MAAOrB,EAAAA,OACPiB,OAAQjB,EAAAA,OAAiB4B,aAE3B5B,EAAAA,MAAgB,CACduB,MAAOvB,EAAAA,OACPwB,KAAMxB,EAAAA,OAAiB4B,WACvBP,MAAOrB,EAAAA,OACPiB,OAAQjB,EAAAA,OAAiB4B,iBCtHjC,MAAAE,EAAA,aASaC,EACX,SAAoBhE,GAAC,IAAAI,SAAEH,GAAaD,EAAApB,EAAAkE,EAAA9C,EAAA+D,GAClC,OAAI9D,EAEAF,EAAAA,cAACqD,EACKpC,EAAA,GAAApC,EACJ,CAAAwB,SAAU,CACRC,IAAKJ,GACN,iBAEDyC,IAAI,MAAA3C,EAAAA,cAID,MAASiB,EAAA,GAAApC,GAEpB,EAEFoF,EAAYF,YAAc,cAC1BE,EAAYJ,UAAY,CACtBxD,SAAU6B,EAAAA,OACVoB,QAA0B,OAAnBM,EAAEP,EAAQQ,gBAAA,EAARD,EAAmBN,QAC5BX,IAAK,SAAU3C,EAAOC,EAAUC,GAC9B,OAAKF,EAAMC,GAIJ,IAASiE,MACd,kBAAkBjE,qBAA4BC,2BAH/C,IAKH,GClCW,MAAAiE,EAAoC,SAAmBlE,GAClE,OACED,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACqD,EAAYpC,EAAA,GAAAhB,IACbD,EAAAA,cAAA,gBACEA,EAAAA,cAACqD,EAAYpC,EAAA,GAAAhB,EAAA,CAAOkB,YAAA,MAI5B,EAEAgD,EAAUJ,YAAc,YACxBI,EAAUN,UAAYR,EAAQQ,UAAA,MAAAO,EAAA,8HAAAC,EAAA,sBCRxBC,EAAkBtE,GAAwBA,EAAId,QAAQ,MAAO,IAmHtDqF,EAA4C,SACvDvE,EACAC,EACAC,GAAA,QAAAsE,EAAAC,UAAAvG,OACGW,EAAA,IAAApB,MAAA+G,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAA7F,EAAA6F,EAAA,GAAAD,UAAAC,GAAA,OAEE1E,EAAM2C,KAAqB,KAAd3C,EAAM2C,IAMRgC,IAAAA,OAACC,MAADD,IAAA,CAAQ3E,EAAOC,EAAUC,GAAA2E,OAAkBhG,IALlD,IAAAqF,MAAA,iCAC4BhE,2JAAA,EAOjB4E,EAAG,CACvBC,MAAOJ,IAAAA,OAAiBb,WACxBnB,IAAK4B,GC7IPS,EAAA,8FAAAC,EAAA,sBAAAC,EA4BmB,IAAAC,IACnB,IAA8BC,EACyBC,EAgCvD,MAAMC,EAA4C,SAWjDtF,GAAA,IAX8EuF,GAC7EtF,EAAU,MAAA8E,MACV7E,EAAKa,MACLU,EAAKC,gBACLQ,EAAepB,UACf6D,EACAa,MAAOC,EAAWC,YAClBC,EAAWC,OACXpG,EAAMqG,QACNC,GAED9F,EADI+F,EAEHhD,EAAA/C,EAAAgF,GAAA,MAAMpE,MAAEoF,EAAKnF,OAAEoF,EAAM1D,OAAE2D,GAAWhG,EAAAiG,EAK9BzF,EAAgBsF,EAAOC,EAAQC,IAHjCnF,MAAOqF,EACPtF,UAAWuF,GACRF,EAAAG,EAAAvD,EAAAoD,EAAAlB,GAECsB,GAAO5F,EAAAA,EAAAA,UAAA6F,GACIlF,EAAAA,EAAAA,UAAQ,IAAMmF,KAAKC,UAAUxG,EAAME,SAAS,CAACF,EAAME,SAGhEqF,IACFd,EAAYc,GAGd,MAAWkB,EAAA,SLxCX3G,EACAC,EACAC,GAEA,IAASrB,EAAG,GAWZ,MAVe,cAAXmB,IACFnB,EACE,+CAACqB,EAASD,EAAS,iBAIR,gBAAXD,IACFnB,EAAA,0BAAkCoB,mIAAuIC,eAAoBD,2IAGxLpB,CACT,CKwBa,CAAYqH,EAAQF,EAAOC,GA+HtC,OA7HA1E,EAAAA,EAAAA,YAAU,KACH6D,IACHA,EAA6B,8BAAyBwB,MACpDC,IAAA,IAAGC,oBAAA9G,EAAqB+G,qBAAA9G,GAAA4G,EAAA,OACtBxB,EAAcrF,EAEP,CACL8G,oBAAA9G,EACA+G,qBAAA9G,EAAA,KAQR,MAAMD,EAAWuG,EAAKS,QAAQC,cACH,2BAE3B,GAAIjH,GAAYJ,IAkCd,OAjCII,EAASkH,UAAA,MAEXvB,GAAAA,EAAc,CACZwB,WAAA,IAAW,MAEb3H,GAAAA,EAAS,CACP2H,WAAA,IAIFC,YAAW,KACTpH,EAASqH,gBAAgB,2BACxB,KAEQ,MAAX1B,GAAAA,EAAc,CACZwB,WAAA,IAGFnH,EAASsH,iBAAuB,QAAE,SAAArH,IAChCD,EAASuH,oBAAA,OAA4BtH,GAE/B,MAANT,GAAAA,EAAS,CACP2H,WAAA,IAGFC,YAAW,KACTpH,EAASqH,gBAAgB,wBAAuB,GAC/C,EACL,UAGFnC,EAAWsC,IAAIhB,GAKjB,GAAInB,GAAeH,EAAWuC,IAAIjB,GAChC,OAGF,IAAIvG,EACApB,EAiCJ,OAhCAuG,EAA2BwB,MACzBc,IAAwB,IAArBZ,oBAAA9G,EAAqB+G,qBAAApG,GAAA+G,EACjBnB,EAAKS,UAIVT,EAAKS,QAAQW,UAAY3H,EAAAiB,EAAA,CACvB2G,WAAA,EACAC,SAAU3C,EAAWuC,IAAIjB,GACzBzB,MAAA7E,GACG6F,IAGAb,EAAWuC,IAAIjB,KAClBvG,EAAiB6H,uBAAsB,KACjCvB,EAAKS,UACPnI,EAAkB8B,EAChB4F,EAAKS,QACLR,EACAtB,EACAzD,EACAkE,EACAnG,EACAsG,GAEH,KAEJ,IAKE,KACD7F,GACF8H,qBAAqB9H,GAEnBpB,GACFA,GACD,CACH,GACC,CAACqB,KAGJsB,EAAAA,EAAAA,kBAAgB,KACV0D,EAAWuC,IAAIjB,IAAanB,IAC9BkB,EAAKS,QAAQW,UAAYtC,EACvBpE,EAAA,CAAA2G,UAAW1C,EAAWuC,IAAIjB,GAC1BqB,SAAU3C,EAAWuC,IAAIjB,GACzBzB,MAAA7E,GACG6F,IAAA,MAILJ,GAAAA,EAAc,CACZwB,WAAA,IAAW,MAEb3H,GAAAA,EAAS,CACP2H,WAAA,IAEH,GACA,CAACjH,KAGGrB,EAAAA,EAAAA,eAAcoB,EAAAgB,EAAA,GAChBqF,EAAY,CACfvF,MAAKE,EAAA,GACAmF,EACA3E,EACH,CAAAC,gBAAAQ,IAEFpB,UAAW,GAAGuF,IAAS1B,EAAY,IAAIA,IAAA,KACvCqD,IAAKzB,EACL0B,wBAAyB,CACvBC,OAAQvB,GAEVwB,0BAAA,IAEJ,EAEwBC,GAAwClI,EAAAA,EAAAA,OAC9D,SAAqBF,GACnB,OAAKA,EAAM+E,OAcJlG,EAAAA,EAAAA,eAAcyG,EAAqBtF,GARzC,IASH,IAGFoI,EAAYvE,UAAYiB,EACxBsD,EAAYrE,YAAc,cC5P1B,MAAAsE,EAAA,mPAsBgB,SAAAC,EACdrI,GAEA,OAAgB,SAuBfC,GAAA,IAvB2BI,IAC1BzB,EACA0J,YAAa5H,EAAS6H,QACtBlH,GAmBGpB,EAAAqB,EAEHwB,EAAA7C,EAAAmI,GAIA,OAJI/G,GACFmH,QAAQC,KAAKpH,GAGXX,EACKX,EAAAA,cAACC,EAAYgB,EAAA,CAAA8D,MAAOpE,GAAeY,KAE5CkH,QAAQC,KAAA,mBAAyB7J,GAOnC,MACF,CAEA,MAAiB8J,EACfL,GFvDA,SAAoBrI,GAAA,IAACsF,GACnBrF,EAAA,MAAUY,UACVjC,EACA2G,MAAO7E,EAAWI,MAClBO,EAAKyD,MACLxD,EAAKL,QACLM,EAAgB,OAAAoH,aAChBnH,EAAYoH,SACZ3G,EAAQR,gBACRiD,EAAe3C,UACfyD,EAASxD,eACT0D,GAAA1F,EACGT,EAAKuD,EAAA9C,EAAAmE,GAER,IAAK7C,EAEH,OADAkH,QAAQC,KAAK,4CACN,KAGL/H,IACF9B,EAAY8B,GAGduB,EAAAjB,EAAA,CACEe,UAAAyD,EACAxD,eAAA0D,EACAjE,gBAAAiD,GACGzC,GAGL,MAAMtB,MACJkF,EAAKjF,OACLkF,EAAMxD,OACNyD,EAAM5F,OACN6F,EAAM6C,YACN5C,EACAxE,gBAAiByE,GACf5E,EAMA6E,EAAA1F,EAAgBoF,EAAOC,EAAQC,IAHjCjF,MAAOsF,EACPvF,UAAWwF,GACRF,EAAAG,EAAAxD,EAAAqD,EAAA/B,GAGCmC,EAA4C,CAChDnG,cAAA,EACAiD,QAAS,IAoBX,OAlBI2C,EAAO5F,WACTmG,EAAcnG,SAAQY,EAAA,GACjBgF,EAAO5F,SAAA,CACV8C,OAAQ8C,EAAO5F,SAAS8C,OACpBmB,EAAe2B,EAAO5F,SAAS8C,aAAA,KAKnC8C,EAAO3C,UACTkD,EAAclD,QAAU2C,EAAO3C,QAAQxF,KAAIkC,GAAAiB,EAAA,GAEpCjB,EAAM,CACTmD,OAAQmB,EAAetE,EAAOmD,aAAAnD,EAAAA,cAMlCE,EAEKe,EAAA,GAAAsF,EAAA,CACHxF,MAAKE,EAAA,GACAoF,EACA/E,EAAK,CACRI,gBAAAiD,IAEF7D,UAAW,GAAGwF,IAASzH,EAAY,IAAIA,IAAA,OAEzCmB,EAAAA,cAAC6C,EAAc,CAAAN,OAAQyD,EAAQpF,MAAOkF,EAAOjF,OAAQkF,GACnD/F,EAAAA,cAACiE,EAAWhD,EAAA,GACNI,EACF6E,GAAA,EAEAF,EACAF,EACAC,EACAI,EACAV,EACAE,KAIJ3F,EAAAA,cAACmE,EACuBlD,EAAA,4BACtBH,UAAWW,GACNjC,EAKDwB,EACU,UAAZQ,GAAA,EAEAgF,EACAhF,EACAU,MAKV,IErDuB6G,EAAgC,SACvD/I,EACAC,GAAA,QAAA+I,EAAAvE,UAAAvG,OACGgC,EAAA,IAAAzC,MAAAuL,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA/I,EAAA+I,EAAA,GAAAxE,UAAAwE,GAAA,MAG2B,cAA5BjJ,EAAMuC,QACQ,UAAbtC,GAAA,WAAwBA,IACzBD,EAAMC,GAAA0E,IAAAA,OAMSC,MANTD,IAAA,CAMgB3E,EAAOC,GAAA4E,OAAa3E,IAJnC,IAASgE,MACd,IAAIjE,MAAaD,EAAMC,iDAAA,EAMXiJ,EAAG,IAAI/D,IAAI,CAAQ,QAAa,YAAe,gBAEpDgE,EAAY,CACvB7I,IAAKqE,IAAAA,OAAiBb,WACtBnB,IAAK4B,EACL3D,MAAOmI,EACPlI,OAAQkI,EACRxF,MAAOoB,IAAAA,OACPpC,OAASvC,IACP,YAAIA,EAAMuC,SAGN2G,EAAazB,IAAIzH,EAAMuC,QAI3B,OAAW,IAAA2B,MACT,iBAAiBlE,EAAMuC,2HAA0H,GAKvJoG,EAAY5E,YAAc,cAC1B4E,EAAY9E,UAAYsF,EC7FlB,MAAAC,EACJd,EAAgBF,GAElBgB,EAAYrF,YAAc,cAC1BqF,EAAYvF,UAAYsF,C,mIClBxB,MAAME,EAAaC,GACfC,EAAAA,cAAA,MAAIzI,UAAW,0BAA0BwI,EAAMxI,WAAa,MACxDyI,EAAAA,cAAA,QAAMzI,UAAU,iBAAiBwI,EAAME,OACtCF,EAAMG,UAAYF,EAAAA,cAAA,QAAMzI,UAAU,yBAAyBwI,EAAMG,WAIpEC,EAAgBJ,GAClBC,EAAAA,cAAA,MAAIzI,UAAW,wBAAwBwI,EAAMxI,WAAa,MAAOwI,EAAMxG,UAGrE6G,EAAeL,GACjBC,EAAAA,cAAA,KAAGzI,UAAW,iBAAiBwI,EAAMxI,aAAcwI,EAAMxG,UAGvD8G,EAAON,GAAUC,EAAAA,cAAA,OAAKzI,UAAW,OAAOwI,EAAMxI,WAAa,MAAOwI,EAAMxG,UAExE+G,EAAaP,GACfC,EAAAA,cAAA,OAAKzI,UAAW,8BAAgCwI,EAAMxI,WAAa,GAAKwI,EAAMxG,UAG5EgH,EAAgBR,GAIdC,EAAAA,cAAA,KACIzI,UAAWwI,EAAMxI,WAAa,GAC9BiJ,KAAMT,EAAMS,MALC,4DAMbpH,IAAK2G,EAAM3G,MAAO,EAClBqH,OAAQV,EAAMU,SAAU,EACxBC,IAAI,cAEJV,EAAAA,cAAA,UACI7F,KAAK,SACL5C,UAAW,qCAAqCwI,EAAMY,iBAAmB,MAExEZ,EAAMa,MAAQ,wBCjChB,SAASC,IAEpB,OACIb,EAAAA,cAAA,UAAQzI,UAAU,6BACdyI,EAAAA,cAAA,OAAKzI,UAAU,6BACXyI,EAAAA,cAAA,OAAKzI,UAAU,mBACXyI,EAAAA,cAAA,OAAKzI,UAAU,mCACXyI,EAAAA,cAAA,MAAIzI,UAAU,kBACVyI,EAAAA,cAAA,SACIA,EAAAA,cAAA,KAAGzI,UAAU,oCAAsC,wBAG3DyI,EAAAA,cAAA,KAAGzI,UAAU,QAAO,0CACpByI,EAAAA,cAAA,KAAGzI,UAAU,QAAO,yCACpByI,EAAAA,cAAA,KAAGzI,UAAU,QAAO,qCACpByI,EAAAA,cAAA,WACAA,EAAAA,cAAA,KAAGzI,UAAU,QACTyI,EAAAA,cAACc,EAAAA,GAAI,CAACC,GAAG,kCAAiC,mCAGlDf,EAAAA,cAAA,OAAKzI,UAAU,4FACXyI,EAAAA,cAAA,OAAKjJ,IAAI,WAAWQ,UAAU,OAAO6B,IAAI,sCAIrD4G,EAAAA,cAAA,OAAKzI,UAAU,gBACXyI,EAAAA,cAACM,EAAS,CAAC/I,UAAU,kCACjByI,EAAAA,cAAA,YAAM,sCAK1B,CChCe,SAASgB,EAAOjB,GAC3B,OACIC,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,OAAKzI,UAAW,WAAWwI,EAAMkB,MAAQ,KAAMzJ,MAAO,CAAC2B,QAAS,QAAS7B,OAAQ,WACjF0I,EAAAA,cAAA,OAAKzI,UAAW,gBAAgBwI,EAAMkB,MAAQ,MACzClB,EAAMxG,UAEXyG,EAAAA,cAACa,EAAM,MAGnB,CCZe,SAASK,EAAInB,GACxB,MAAMoB,GAAOC,EAAAA,EAAAA,IAAe,eAWtB,MAAEnB,EAAK,YAAEoB,GAAgBF,EAAKG,KAAKC,aAEzC,OACIvB,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,QAAMwB,QAAQ,UACdxB,EAAAA,cAAA,QAAMyB,KAAK,WAAWC,QAAQ,0CAC9B1B,EAAAA,cAAA,QAAMU,IAAI,YAAYF,KAAK,2BAC3BR,EAAAA,cAAA,QAAMU,IAAI,OAAOvG,KAAK,gBAAgBqG,KAAK,gBAC3CR,EAAAA,cAAA,UAAQ7F,KAAK,kBAAkBpD,IAAI,uEACnCiJ,EAAAA,cAAA,aAAQD,EAAME,OAASA,GACvBD,EAAAA,cAAA,QAAMyB,KAAK,cAAcC,QAAS3B,EAAMsB,aAAeA,IAGnE,CCxBe,SAASM,EAAO5B,GAC3B,OACIC,EAAAA,cAAA,UAAQzI,UAAW,GAAGwI,EAAMxI,WAAa,MACrCyI,EAAAA,cAACM,EAAS,CAAC/I,UAAU,+BAChBwI,EAAMxG,UAAYwG,EAAMxG,SACzByG,EAAAA,cAACF,EAAS,CAACG,MAAOF,EAAME,MAAOC,SAAUH,EAAMG,WAC/CF,EAAAA,cAAA,OAAK/D,MAAM,oCACP+D,EAAAA,cAAA,OAAK/D,MAAM,SACP+D,EAAAA,cAAA,QAAM/D,MAAM,mBAMpC,C,cCfe,SAAS2F,EAAQ7B,GAC5B,OACIC,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACG,EAAY,CAAC5I,UAAWwI,EAAMxI,WAAa,IAAKwI,EAAME,OACvDD,EAAAA,cAAA,MAAIzI,UAAU,oBAAoBwI,EAAMG,UACxCF,EAAAA,cAACI,EAAW,CAAC7I,UAAWwI,EAAMxI,WAAa,IAAKwI,EAAM2B,SAGlE,CCJe,SAASG,EAAQ9B,GAC5B,MASMvE,GATO4F,EAAAA,EAAAA,IAAe,aASTU,KAAK5K,gBAAgBF,gBAClCiJ,EAAQF,EAAME,OAASD,EAAAA,cAAAA,EAAAA,SAAA,KAAE,gBAAaA,EAAAA,cAAA,SAAG,4BACzCE,EAAWH,EAAMG,UAAY,KAC7BwB,EAAU3B,EAAM2B,SAAW,4XAEjC,OACI1B,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,WAASzI,UAAU,WACfyI,EAAAA,cAACM,EAAS,CAAC/I,UAAU,8CACjByI,EAAAA,cAACK,EAAG,KACAL,EAAAA,cAAA,OAAKzI,UAAU,kCACXyI,EAAAA,cAAC4B,EAAO,CACJ3B,MAAOA,EACPC,SAAUA,EACVwB,QAASA,IAEb1B,EAAAA,cAACO,EAAY,CAACC,KAAMT,EAAMS,MAAQ,KAAMI,KAAMb,EAAMgC,cAAgB,KAAM3I,IAAI,gBAAgBqH,OAAO,YAEzGT,EAAAA,cAAA,OAAKzI,UAAU,kCACfyI,EAAAA,cAAA,OAAKzI,UAAU,0BACXyI,EAAAA,cAAA,OAAKzI,UAAU,mBACXyI,EAAAA,cAACgC,EAAAA,EAAW,CAACxG,MAAOuE,EAAMvE,OAASA,EAAOjE,UAAU,+BAA+B6B,IAAI,uBAQvH,CCvCe,SAAS6I,EAAUlC,GAC9B,MAAMmC,EAAmBC,GACdC,EAAUD,GAAUE,MAAM9N,KAAI,CAAC+N,EAAMC,IAAUvC,EAAAA,cAACgC,EAAAA,EAAW,CAAC5I,IAAI,oBAAoBoC,OAAOgH,EAAAA,EAAAA,GAASF,EAAKG,KAAKvL,gBAAgBF,iBAAkBO,UAAWgL,EAAQ,GAAK,WAGnL,IAAIH,GAAYhB,EAAAA,EAAAA,IAAe,cAwB3BrB,EAAM2C,QACNN,EAAYrC,EAAM2C,OAGtB,MAAMC,EAAST,EAAgB,UACzBU,EAAQV,EAAgB,SAExBW,EAAW9C,EAAM8C,UAAY,CAC/B,CACI5C,MAAO,4CACPyB,QACI1B,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,SAAG,mRAE6D,KAEhEA,EAAAA,cAAA,SAAG,wRAMXnJ,OAAQ8L,GAEZ,CACI1C,MAAO,iDACPyB,QACI1B,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,SAAG,qKACHA,EAAAA,cAAA,SAAG,wMACHA,EAAAA,cAAA,SAAG,6HAGXnJ,OAAQ+L,IAWhB,OAP6BE,aAAlB/C,EAAM8C,WACbA,EAAS,GAAGhM,OAAS8L,EACrBE,EAAS,GAAGhM,OAAS+L,GAMrB5C,EAAAA,cAAA,WAASzI,UAAU,aACdsL,EAAStO,KAAI,CAACwO,EAASR,IACpBvC,EAAAA,cAACM,EAAS,CAAC/I,UAAW,SAASgL,IAASnI,IAAKmI,GACzCvC,EAAAA,cAACK,EAAG,CAAC9I,UAAWgL,EAAQ,GAAK,oBACzBvC,EAAAA,cAAA,OAAKzI,UAAU,iDACXyI,EAAAA,cAACK,EAAG,KACAL,EAAAA,cAAA,OAAKzI,UAAU,SACVwL,EAAQlM,OAAO,GACfkM,EAAQlM,OAAO,IAEpBmJ,EAAAA,cAAA,OAAKzI,UAAU,SACXyI,EAAAA,cAAA,OAAKzI,UAAU,QACdwL,EAAQlM,OAAO,GACfkM,EAAQlM,OAAO,MAI5BmJ,EAAAA,cAAA,OAAKzI,UAAU,oFACXyI,EAAAA,cAAC4B,EAAO,CAAC3B,MAAO8C,EAAQ9C,MAAOyB,QAASqB,EAAQrB,eAO5E,C,uBCtGe,SAASsB,EAAajD,GACjC,OACIC,EAAAA,cAAA,WAASzI,UAAU,sBACfyI,EAAAA,cAACM,EAAS,KACNN,EAAAA,cAAA,OAAKzI,UAAU,uCACXyI,EAAAA,cAAA,OAAKzI,UAAU,gEACXyI,EAAAA,cAAA,OAAKzI,UAAU,sCACVwI,EAAMvE,OAEXwE,EAAAA,cAACG,EAAY,CAAC5I,UAAU,uBAAuBwI,EAAMa,MACrDZ,EAAAA,cAAA,OAAKzI,UAAU,eACXyI,EAAAA,cAAA,KAAGzI,UAAU,wBAAwBC,MAAO,CAAC2B,QAAS4G,EAAM2B,QAAU,QAAU,SAAU3B,EAAM2B,SAChG1B,EAAAA,cAACO,EAAY,CAACC,KAAMT,EAAMS,MAAQ,KAAMI,KAAMb,EAAMgC,cAAgB,KAAMxK,UAAU,aAOhH,CClBe,SAAS0L,IACpB,MAAMP,GAAQtB,EAAAA,EAAAA,IAAe,aAcvB8B,GAAeV,EAAAA,EAAAA,GAASE,EAAMlH,MAAM6G,MAAM,GAAGI,KAAKvL,gBAAgBF,iBAExE,OAAOgJ,EAAAA,cAACgC,EAAAA,EAAW,CAACzK,UAAU,gBAAgBiE,MAAO0H,GACzD,CCnBe,SAASC,EAAgBpD,GACpC,MAAMqD,EAAkBrD,EAAMqD,iBAAmB,CAC7C,CACIC,KAAM,mBACNpD,MAAO,8BACPoB,YAAa,kKAEjB,CACIgC,KAAM,qBACNpD,MAAO,4BACPoB,YAAa,kHAEjB,CACIgC,KAAM,mBACNpD,MAAO,2BACPoB,YAAa,8HAKrB,OACIrB,EAAAA,cAAA,WAASzI,UAAU,yBACfyI,EAAAA,cAACM,EAAS,KACNN,EAAAA,cAACG,EAAY,CAAC5I,UAAU,eAAc,iCACtCyI,EAAAA,cAACK,EAAG,CAAC9I,UAAU,OACV6L,EAAgB7O,KAAI,CAAC+O,EAASf,IAC3BvC,EAAAA,cAAA,OAAK5F,IAAKmI,EAAOhL,UAAU,2BACvByI,EAAAA,cAAA,OAAKzI,UAAU,uFACXyI,EAAAA,cAAA,KAAGzI,UAAW,GAAG+L,EAAQD,gBAE7BrD,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAIsD,EAAQrD,QAChBD,EAAAA,cAAA,SAAIsD,EAAQjC,kBAOxC,CC5Be,SAASkC,EAAoBxD,GAExC,MAAMyD,EAAS,CAAE/B,KAAMzB,EAAAA,cAAAA,EAAAA,SAAA,KAAE,qBAAkBA,EAAAA,cAAA,QAAMzI,UAAU,gBAAe,oBAA2BkM,IAAK,oCAAqCC,MAAO,aAChJC,EAAS,CAAElC,KAAMzB,EAAAA,cAAAA,EAAAA,SAAA,KAAE,yBAAsBA,EAAAA,cAAA,QAAMzI,UAAU,gBAAe,+BAAsCkM,IAAK,oCAAqCC,MAAO,yBAC/JE,EAAS,CAAEnC,KAAMzB,EAAAA,cAAAA,EAAAA,SAAA,KAAE,wBAAqBA,EAAAA,cAAA,QAAMzI,UAAU,gBAAe,sBAA6BkM,IAAK,oCAAqCC,MAAO,yBAErJlI,EAAQuE,EAAMoB,KAAK0C,qBAAqB3M,gBAAgBF,gBACxD8M,EAAmB,CACrB,CACI7D,MAAO,wBACPyB,QACI1B,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,KAAGzI,UAAU,eAAc,2fAKnCV,OAAQ,MAEZ,CACIoJ,MAAO,4BACPyB,QACI1B,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,KAAGzI,UAAU,eAAc,odAMnCV,OAAQ,OAuBhB,OACImJ,EAAAA,cAACgB,EAAM,CAACC,KAAK,0BACTjB,EAAAA,cAAC2B,EAAM,CAAC1B,MAAM,cAAc1I,UAAU,OAAO0J,KAAK,0BAC9CjB,EAAAA,cAAA,OAAKzI,UAAU,iCACXyI,EAAAA,cAACc,EAAAA,GAAI,CAACC,GAAG,KACLf,EAAAA,cAAA,OAAKzI,UAAU,YAAYR,IAAI,qBAAqBqC,IAAI,wBAKpE4G,EAAAA,cAACiD,EAAO,MAERjD,EAAAA,cAAC6B,EAAO,CACJ5B,MAAM,0BACNC,SAAUF,EAAAA,cAAAA,EAAAA,SAAA,KAAE,gFACZ0B,QAAS1B,EAAAA,cAAAA,EAAAA,SAAA,KAAE,qRACXxE,MAAOA,EACPuG,aAAa,oBACbvB,KAAMgD,EAAOC,MAGjBzD,EAAAA,cAACiC,EAAS,CACNY,SAAUiB,EACVpB,MAAO3C,EAAMoB,OAGjBnB,EAAAA,cAACmD,EAAe,CAACC,gBA7CD,CACpB,CACIC,KAAM,yBACNpD,MAAO,qBACPoB,YAAa,qEAEjB,CACIgC,KAAM,oBACNpD,MAAO,uBACPoB,YAAa,+FAEjB,CACIgC,KAAM,sBACNpD,MAAO,4BACPoB,YAAa,gIAiCbrB,EAAAA,cAAA,WAASzI,UAAU,qBACfyI,EAAAA,cAACM,EAAS,KACNN,EAAAA,cAAA,OAAKzI,UAAU,OACXyI,EAAAA,cAACK,EAAG,KACAL,EAAAA,cAAA,OAAKzI,UAAU,sBACXyI,EAAAA,cAAA,OAAKzI,UAAU,QACXyI,EAAAA,cAACG,EAAY,CAAC5I,UAAU,eAAc,qCAE1CyI,EAAAA,cAAA,OAAKzI,UAAU,aACXyI,EAAAA,cAAA,MAAIzI,UAAU,oBACVyI,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAG,mBAAmB,0HAC1BA,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAG,kCAAkC,+GACzCA,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAG,uBAAuB,gJAC9BA,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAG,yBAAyB,wGAEpCA,EAAAA,cAAA,KAAGzI,UAAU,QAAO,8CAA2CyI,EAAAA,cAAA,SAAG,iDAAiD,yGAAsGA,EAAAA,cAAA,SAAG,sCAAsC,2BAAwBA,EAAAA,cAAA,SAAG,+BAA+B,iDAGpUA,EAAAA,cAAA,OAAKzI,UAAU,sBACXyI,EAAAA,cAAA,OAAKzI,UAAU,QACXyI,EAAAA,cAACG,EAAY,CAAC5I,UAAU,eAAc,yBAE1CyI,EAAAA,cAAA,OAAKzI,UAAU,QACXyI,EAAAA,cAAA,OAAKzI,UAAU,wBACXyI,EAAAA,cAAA,WACIA,EAAAA,cAAA,UAAKwD,EAAO/B,MACZzB,EAAAA,cAAA,QAAMzI,UAAU,SAASiM,EAAOE,QAEpC1D,EAAAA,cAAA,OAAKzI,UAAU,eACXyI,EAAAA,cAACO,EAAY,CACTK,KAAK,eACLJ,KAAMgD,EAAOC,QAIzBzD,EAAAA,cAAA,OAAKzI,UAAU,wBACXyI,EAAAA,cAAA,WACIA,EAAAA,cAAA,UAAK2D,EAAOlC,MACZzB,EAAAA,cAAA,QAAMzI,UAAU,SAASoM,EAAOD,QAEpC1D,EAAAA,cAACO,EAAY,CACTK,KAAK,eACLJ,KAAMmD,EAAOF,OAGrBzD,EAAAA,cAAA,OAAKzI,UAAU,wBACXyI,EAAAA,cAAA,WACIA,EAAAA,cAAA,UAAK4D,EAAOnC,MACZzB,EAAAA,cAAA,QAAMzI,UAAU,SAASqM,EAAOF,QAEpC1D,EAAAA,cAACO,EAAY,CACTK,KAAK,eACLJ,KAAMoD,EAAOH,WAOrCzD,EAAAA,cAAA,MAAIzI,UAAU,iBAAgB,+FAA4FyI,EAAAA,cAAA,SAAG,6CAA6C,0HAIlLA,EAAAA,cAACgD,EAAY,CACTjB,aAAa,mCACbvB,KAAMgD,EAAOC,IACb/B,QAAS1B,EAAAA,cAAAA,EAAAA,SAAA,KAAE,gFAA6EA,EAAAA,cAAA,WAAK,sDAC7FY,KAAK,kDACLpF,MAAOwE,EAAAA,cAAC+D,IAAK,QAI7B,CAEO,MAAMC,EAAOA,IAAMhE,EAAAA,cAACkB,EAAG,CAACjB,MAAM,yC,uBCxKrC,IAAID,EAAQ,EAAQ,MAEpB,SAASiE,EAAkBlE,GACvB,OAAOC,EAAMkE,cAAc,MAAMnE,EAAM,CAACC,EAAMkE,cAAc,OAAO,CAAC,EAAI,yPAAyP,KAAO,UAAU,IAAM,IAAIlE,EAAMkE,cAAc,OAAO,CAAC,EAAI,wXAAwX,KAAO,UAAU,IAAM,IAAIlE,EAAMkE,cAAc,OAAO,CAAC,EAAI,iWAAiW,KAAO,UAAU,IAAM,IAAIlE,EAAMkE,cAAc,SAAS,CAAC,GAAK,QAAQ,GAAK,QAAQ,EAAI,QAAQ,KAAO,UAAU,IAAM,IAAIlE,EAAMkE,cAAc,OAAO,CAAC,GAAK,gDAAgD,EAAI,yLAAyL,KAAO,UAAU,IAAM,IAAIlE,EAAMkE,cAAc,UAAU,CAAC,OAAS,kEAAkE,KAAO,UAAU,IAAM,IAAIlE,EAAMkE,cAAc,UAAU,CAAC,OAAS,8DAA8D,KAAO,UAAU,IAAM,IAAIlE,EAAMkE,cAAc,UAAU,CAAC,OAAS,8DAA8D,UAAY,UAAU,QAAU,KAAK,IAAM,IAAIlE,EAAMkE,cAAc,SAAS,CAAC,GAAK,QAAQ,GAAK,QAAQ,EAAI,OAAO,KAAO,UAAU,IAAM,IAAIlE,EAAMkE,cAAc,OAAO,CAAC,EAAI,wTAAwT,KAAO,UAAU,IAAM,IAAIlE,EAAMkE,cAAc,OAAO,CAAC,EAAI,kGAAkG,KAAO,UAAU,IAAM,KAAKlE,EAAMkE,cAAc,OAAO,CAAC,EAAI,qFAAqF,KAAO,UAAU,IAAM,KAAKlE,EAAMkE,cAAc,OAAO,CAAC,EAAI,qIAAqI,KAAO,UAAU,IAAM,KAAKlE,EAAMkE,cAAc,OAAO,CAAC,EAAI,+DAA+D,KAAO,UAAU,IAAM,KAAKlE,EAAMkE,cAAc,UAAU,CAAC,OAAS,8DAA8D,KAAO,UAAU,IAAM,KAAKlE,EAAMkE,cAAc,UAAU,CAAC,OAAS,8DAA8D,KAAO,UAAU,IAAM,KAAKlE,EAAMkE,cAAc,OAAO,CAAC,EAAI,6GAA6G,KAAO,UAAU,IAAM,KAAKlE,EAAMkE,cAAc,OAAO,CAAC,EAAI,sGAAsG,KAAO,UAAU,IAAM,KAAKlE,EAAMkE,cAAc,OAAO,CAAC,GAAK,gDAAgD,EAAI,qLAAqL,KAAO,UAAU,IAAM,KAAKlE,EAAMkE,cAAc,UAAU,CAAC,OAAS,kEAAkE,KAAO,UAAU,IAAM,KAAKlE,EAAMkE,cAAc,OAAO,CAAC,EAAI,wIAAwI,KAAO,UAAU,IAAM,KAAKlE,EAAMkE,cAAc,OAAO,CAAC,EAAI,QAAQ,EAAI,QAAQ,MAAQ,IAAI,OAAS,MAAM,KAAO,qBAAqB,IAAM,KAAKlE,EAAMkE,cAAc,OAAO,CAAC,EAAI,wPAAwP,KAAO,UAAU,IAAM,KAAKlE,EAAMkE,cAAc,OAAO,CAAC,EAAI,uXAAuX,KAAO,UAAU,IAAM,KAAKlE,EAAMkE,cAAc,OAAO,CAAC,EAAI,6VAA6V,KAAO,UAAU,IAAM,KAAKlE,EAAMkE,cAAc,OAAO,CAAC,EAAI,OAAO,EAAI,QAAQ,MAAQ,IAAI,OAAS,MAAM,KAAO,qBAAqB,IAAM,MACnjL,CAEAD,EAAiBE,aAAe,CAAC,MAAQ,MAAM,OAAS,QAAQ,QAAU,2BAE1EhO,EAAOC,QAAU6N,EAEjBA,EAAiBG,QAAUH,C","sources":["webpack://comunidade seja real nao perfeito/./node_modules/camelcase/index.js","webpack://comunidade seja real nao perfeito/../src/image-utils.ts","webpack://comunidade seja real nao perfeito/../src/components/hooks.ts","webpack://comunidade seja real nao perfeito/../src/components/layout-wrapper.tsx","webpack://comunidade seja real nao perfeito/../src/components/picture.tsx","webpack://comunidade seja real nao perfeito/../src/components/placeholder.tsx","webpack://comunidade seja real nao perfeito/../src/components/main-image.tsx","webpack://comunidade seja real nao perfeito/../src/components/gatsby-image.server.tsx","webpack://comunidade seja real nao perfeito/../src/components/gatsby-image.browser.tsx","webpack://comunidade seja real nao perfeito/../src/components/static-image.server.tsx","webpack://comunidade seja real nao perfeito/../src/components/static-image.tsx","webpack://comunidade seja real nao perfeito/./src/components/common/interface/UI.js","webpack://comunidade seja real nao perfeito/./src/components/Footer.js","webpack://comunidade seja real nao perfeito/./src/components/common/Layout.js","webpack://comunidade seja real nao perfeito/./src/components/common/Seo.js","webpack://comunidade seja real nao perfeito/./src/components/common/Header.js","webpack://comunidade seja real nao perfeito/./src/components/common/Section.js","webpack://comunidade seja real nao perfeito/./src/components/AboutMe.js","webpack://comunidade seja real nao perfeito/./src/components/Treatment.js","webpack://comunidade seja real nao perfeito/./src/components/common/ActionBanner.js","webpack://comunidade seja real nao perfeito/./src/components/Flowery.js","webpack://comunidade seja real nao perfeito/./src/components/SpecialFeatures.js","webpack://comunidade seja real nao perfeito/./src/pages/index.js","webpack://comunidade seja real nao perfeito/./src/images/undraw/undraw_woman_white.svg"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from \"react\";\n\nconst PageTitle = (props) => (\n    <h1 className={`text-center page-title ${props.className || \"\"}`}>\n        <span className=\"d-block title\">{props.title}</span>\n        {props.subtitle && <span className=\"subtitle d-block mt-3\">{props.subtitle}</span>}\n    </h1>\n);\n\nconst SectionTitle = (props) => (\n    <h3 className={`text mb-4 p-0 fs-1gg ${props.className || \"\"}`}>{props.children}</h3>\n);\n\nconst SectionText = (props) => (\n    <p className={`text mb-4 p-0 ${props.className}`}>{props.children}</p>\n);\n\nconst Row = (props) => <div className={`row ${props.className || \"\"}`}>{props.children}</div>;\n\nconst Container = (props) => (\n    <div className={`container-custom px-2 py-2 ` + props.className || \"\"}>{props.children}</div>\n);\n\nconst CallToAction = (props) => {\n    const whatsappLink = \"https://api.whatsapp.com/send?1=pt_BR&phone=5554997119446\";\n\n    return (\n        <a\n            className={props.className || \"\"}\n            href={props.href || whatsappLink}\n            alt={props.alt || false}\n            target={props.target || false}\n            rel=\"noreferrer\"\n        >\n            <button\n                type=\"button\"\n                className={`callToAction btn fs-6 text-center ${props.buttonClassName || \"\"}`}\n            >\n                {props.text || \"Marque sua consulta\"}\n            </button>\n        </a>\n    );\n};\n\nconst ShadowBox = (props) => {\n    return (\n        <div className={`${props.className || ''} shadow-custom p-4`}>\n            {props.children}\n        </div>\n    );\n}\n\nexport { SectionText, SectionTitle, Row, Container, PageTitle, CallToAction, ShadowBox };\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { Container } from \"./common/interface/UI\";\nimport \"./Footer.css\";\n\nexport default function Footer() {\n\n    return (\n        <footer className=\"text-center text-lg-start\">\n            <div className=\"container-custom p-5 px-2\">\n                <div className=\"row dark-violet\">\n                    <div className=\"col-lg-6 col-md-12 mb-4 mb-md-0\">\n                        <h5 className=\"text-uppercase\">\n                            <b>\n                                <i className=\"fas me-3 mb-3 fa-map-marked-alt\"></i> Onde me encontrar?\n                            </b>\n                        </h5>\n                        <p className=\"mb-2\">Rua Humberto Accorsi, n° 230 - Sala 02</p>\n                        <p className=\"mb-2\">Edifício Rádio Estação, bairro Aurora</p>\n                        <p className=\"mb-2\">CEP 95185-000 - Carlos Barbosa/RS</p>\n                        <br />\n                        <p className=\"mb-0\">\n                            <Link to=\"https://thaisbasso.com/contato\">Veja outras formas de contato</Link>\n                        </p>\n                    </div>\n                    <div className=\"footerLogo col-lg-6 col-md-12 mb-4 mb-md-0 d-flex justify-content-end align-items-center\">\n                        <img src=\"logo.png\" className=\"logo\" alt=\"Logo Thaís Basso nutricionista\" />\n                    </div>\n                </div>\n            </div>\n            <div className=\"footerHi p-3\">\n                <Container className=\"d-flex justify-content-between\">\n                    <span>© All rights are reserved | 2024</span>\n                </Container>\n            </div>\n        </footer>\n    );\n}\n","import React from 'react';\nimport Footer from '../Footer';\nimport '../../fontawesome-free-6.2.1-web/css/all.min.css';\nimport '../../styles/style.css';\n\nexport default function Layout(props) {\n    return (\n        <>\n            <div className={`filler  ${props.page || ''}`} style={{display: 'block', height: '100px'}}></div>\n            <div className={`page-content ${props.page || ''}`}>\n                {props.children}\n            </div>\n            <Footer />\n        </>\n    );\n}\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\n\nexport default function Seo(props) {\n    const data = useStaticQuery(graphql`\n        query siteMetadata {\n            site {\n                siteMetadata {\n                    title\n                    description\n                }\n            }\n        }\n    `);\n\n    const { title, description } = data.site.siteMetadata;\n\n    return (\n        <>\n            <meta charSet=\"UTF-8\" />\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n            <link rel=\"canonical\" href=\"https://thaisbasso.com\" />\n            <link rel=\"icon\" type=\"image/svg+xml\" href=\"favicon.svg\" />\n            <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/6.2.0/mdb.min.js\"></script>\n            <title>{props.title || title}</title>\n            <meta name=\"description\" content={props.description || description} />\n        </>\n    );\n}\n","import React from \"react\";\nimport { Container, PageTitle } from \"../common/interface/UI\";\nimport \"./Header.css\";\n\nexport default function Header(props) {\n    return (\n        <header className={`${props.className || \"\"}`}>\n            <Container className=\"py-3 justify-content-center\">\n                {props.children && props.children}\n                <PageTitle title={props.title} subtitle={props.subtitle} />\n                <div class=\"mouse-container scroll-animation\">\n                    <div class=\"mouse\">\n                        <span class=\"scroll-down\"></span>\n                    </div>\n                </div>\n            </Container>\n        </header>\n    );\n}\n","import React from 'react';\nimport { SectionText, SectionTitle } from './interface/UI';\n\nexport default function Section(props) {\n    return (\n        <>\n            <SectionTitle className={props.className || \"\"}>{props.title}</SectionTitle>\n            <h4 className='section-subtitle'>{props.subtitle}</h4>\n            <SectionText className={props.className || \"\"}>{props.content}</SectionText>\n        </>\n    );\n}\n","import React from \"react\";\nimport \"./AboutMe.css\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { Container, Row, CallToAction } from \"./common/interface/UI\";\nimport Section from \"./common/Section\";\n\nexport default function AboutMe(props) {\n    const data = useStaticQuery(graphql`\n        query ThaisProfileImages {\n            logo: file(relativePath: { eq: \"fotos-thais/foto-profile.webp\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, formats: [AUTO, WEBP])\n                }\n            }\n        }\n    `);\n    const image = data.logo.childImageSharp.gatsbyImageData;\n    const title = props.title || <>Venha comigo <u>revolucionar a nutrição</u></>;\n    const subtitle = props.subtitle || null;\n    const content = props.content || \"Sou a Thaís Basso, nutricionista pós-graduada em nutrição funcional e comportamento alimentar, uma das áreas mais atuais da Nutrição. Sou apaixonada pela minha profissão e por como ela pode mudar a vida das pessoas. Estou sempre buscando conhecimento e novidades na área, possuo mais de 10 cursos em áreas específicas da nutrição que agregam e enriquecem minha prática clínica.\";\n\n    return (\n        <>\n            <section className=\"aboutMe\">\n                <Container className=\"justify-content-between align-items-center\">\n                    <Row>\n                        <div className=\"aboutMeText col-lg-7 col-md-12\">\n                            <Section\n                                title={title}\n                                subtitle={subtitle}\n                                content={content}\n                            />\n                            <CallToAction href={props.href || null} text={props.callToAction || null} alt=\"WhatsApp link\" target=\"_blank\" />\n                        </div>\n                        <div className=\"aboutMeText col-lg-1 col-md-0\"></div>\n                        <div className=\"col-lg-4 col-md-12 p-4\">\n                            <div className=\"image-container\">\n                                <GatsbyImage image={props.image || image} className=\"rounded-circle shadow-custom\" alt=\"Profile image\" />\n                            </div>\n                        </div>\n                    </Row>\n                </Container>\n            </section>\n        </>\n    );\n}\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { Row, Container } from \"./common/interface/UI.js\";\nimport Section from \"./common/Section.js\";\nimport \"./Treatment.css\";\n\nexport default function Treatment(props) {\n    const constructImages = (listName) => {\n        return queryData[listName].edges.map((edge, index) => <GatsbyImage alt=\"Prato ilustrativo\" image={getImage(edge.node.childImageSharp.gatsbyImageData)} className={index < 2 && \"left\"} />);\n    };\n\n    var queryData = useStaticQuery(graphql`\n        query ImagesTreat {\n            plates: allFile(filter: { relativePath: { regex: \"/plates/\" } }) {\n                edges {\n                    node {\n                        childImageSharp {\n                            gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, formats: [AUTO, WEBP])\n                        }\n                    }\n                }\n            }\n\n            foods: allFile(filter: { relativePath: { regex: \"/advantages/\" } }) {\n                edges {\n                    node {\n                        childImageSharp {\n                            gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, formats: [AUTO, WEBP])\n                        }\n                    }\n                }\n            }\n        }\n    `);\n\n    if (props.query) {\n        queryData = props.query;\n    }\n\n    const plates = constructImages(\"plates\");\n    const foods = constructImages(\"foods\");\n\n    const sections = props.sections || [\n        {\n            title: \"Para quem é o acompanhamento nutricional?\",\n            content: (\n                <>\n                    <p>\n                        É indicado para todas as pessoas que buscam mudar sua relação com a comida e aprender a se alimentar de forma saudável e sem restrições alimentares, para atingir seus objetivos específicos, priorizando sempre sua\n                        saúde, com um plano de tratamento totalmente personalizado.{\" \"}\n                    </p>\n                    <p>\n                        É indicado para quem quer aprender a se alimentar de forma equilibrada e com um plano alimentar sustentável a longo prazo, além de auxiliar no controle e tratamento de patologias, é um investimento na sua saúde e\n                        também no manejo do seu peso e melhora na composição corporal.\n                    </p>\n                </>\n            ),\n            images: plates,\n        },\n        {\n            title: \"O que vou ganhar com o tratamento nutricional?\",\n            content: (\n                <>\n                    <p>Com a abordagem comportamental você descobrirá que é possível comer de tudo e ter uma vida saudável, sem dietas malucas e sem os ciclos de restrição e compulsão.</p>\n                    <p>Você irá aprender o que precisa comer para alcançar seus objetivos, seja para ter mais saúde, tratar doenças crônicas como hipertensão e diabetes ou para emagrecer e sentir-se bem com o seu corpo.</p>\n                    <p>Você estará investindo no seu eu do futuro, prevenindo doenças e sentindo-se mais disposto e produtivo no seu dia a dia.</p>\n                </>\n            ),\n            images: foods,\n        },\n    ];\n\n    if (typeof props.sections != undefined) {\n        sections[0].images = plates;\n        sections[1].images = foods;\n    }\n\n\n\n    return (\n        <section className=\"treatment\">\n            {sections.map((section, index) => (\n                <Container className={`p-5 n-${index}`} key={index}>\n                    <Row className={index % 2 && \"flex-row-reverse\"}>\n                        <div className=\"acompanhamento-imagens col-lg-6 col-md-12 p-4\">\n                            <Row>\n                                <div className=\"col-6\">\n                                    {section.images[0]}\n                                    {section.images[1]}\n                                </div>\n                                <div className=\"col-6\">\n                                    <div className=\"box\"></div>\n                                    {section.images[2]}\n                                    {section.images[3]}\n                                </div>\n                            </Row>\n                        </div>\n                        <div className=\"acompanhamento-text col-lg-6 col-md-12 d-flex justify-content-center flex-column\">\n                            <Section title={section.title} content={section.content} />\n                        </div>\n                    </Row>\n                </Container>\n            ))}\n        </section>\n    );\n}\n","import React from \"react\";\nimport { CallToAction, Container, SectionTitle } from \"./interface/UI\";\nimport \"./ActionBanner.css\";\n\nexport default function ActionBanner(props) {\n    return (\n        <section className=\"action-banner my-5\">\n            <Container>\n                <div className=\"action-banner-box text-center white\">\n                    <div className=\"d-flex justify-content-center align-items-center flex-column\">\n                        <div className=\"action-banner-image-container mb-5\">\n                            {props.image}\n                        </div>\n                        <SectionTitle className=\"action-banner-title\">{props.text}</SectionTitle>\n                        <div className=\"text-center\">\n                            <p className=\"action-banner-content\" style={{display: props.content ? 'block' : 'none'}}>{props.content}</p>\n                            <CallToAction href={props.href || null} text={props.callToAction || null} className=\"mt-4\" />\n                        </div>\n                    </div>\n                </div>\n            </Container>\n        </section>\n    );\n}\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport \"./Flowery.css\";\n\nexport default function Flowery() {\n    const query = useStaticQuery(graphql`\n        query Flower {\n            image: allFile(filter: { name: { eq: \"flowery\" } }) {\n                edges {\n                    node {\n                        childImageSharp {\n                            gatsbyImageData(formats: WEBP, layout: FULL_WIDTH, placeholder: BLURRED)\n                        }\n                    }\n                }\n            }\n        }\n    `);\n\n    const floweryImage = getImage(query.image.edges[0].node.childImageSharp.gatsbyImageData);\n\n    return <GatsbyImage className=\"flowery_image\" image={floweryImage} />;\n}\n","import React from \"react\";\nimport { Container, Row, SectionTitle } from \"./common/interface/UI\";\nimport \"./SpecialFeatures.css\";\n\nexport default function SpecialFeatures(props) {\n    const specialFeatures = props.specialFeatures || [\n        {\n            icon: \"fas fa-diagnoses\",\n            title: \"No seu tempo e do seu jeito\",\n            description: \"o plano de tratamento é montado de acordo com suas necessidades e objetivos, priorizando a mudança de hábitos e um plano que você possa seguir a vida inteira.\"\n        },\n        {\n            icon: \"fas fa-cookie-bite\",\n            title: \"Sem dietas desnecessárias\",\n            description: \"Você merece aprender a comer de forma saudável sem depender de dietas malucas e com restrições desnecessárias!\"\n        },\n        {\n            icon: \"fas fa-chart-pie\",\n            title: \"Com cardápios ilustrados\",\n            description: \"Ilustrados e personalizados para a sua alimentação, facilitando a compreensão de uma rotina alimentar variada e completa.\"\n        }\n\n    ];\n\n    return (\n        <section className=\"special-features my-5\">\n            <Container>\n                <SectionTitle className=\"text-center\">E como vamos fazer tudo isso?</SectionTitle> \n                <Row className=\"p-3\">\n                    {specialFeatures.map((feature, index) => (\n                        <div key={index} className=\"col-lg-4 col-md-12 px-4\">\n                            <div className=\"special-feature-box d-flex justify-content-center align-items-center w-100 p-3 mb-4\">\n                                <i className={`${feature.icon} fa-4x`} />\n                            </div>\n                            <h4><b>{feature.title}</b></h4>\n                            <p>{feature.description}</p>\n                        </div>\n                    ))}\n                </Row>\n            </Container>\n        </section>\n    );\n}\n","import * as React from \"react\";\nimport Layout from \"../components/common/Layout\";\nimport Seo from \"../components/common/Seo\";\nimport Header from \"../components/common/Header\";\nimport AboutMe from \"../components/AboutMe\";\nimport Treatment from \"../components/Treatment\";\nimport Woman from \"../images/undraw/undraw_woman_white.svg\";\nimport ActionBanner from \"../components/common/ActionBanner\";\nimport Flowery from \"../components/Flowery\";\nimport { Link, graphql } from \"gatsby\";\nimport SpecialFeatures from \"../components/SpecialFeatures\";\nimport './index.css';\nimport { CallToAction, Container, Row, SectionTitle } from \"../components/common/interface/UI\";\n\nexport default function sejaRealNaoPerfeito(props) {\n    // links to kiwify\n    const Link_1 = { name: <>Assinatura Mensal <span className=\"break-mobile\">(Passo Inicial)</span></>, url: \"https://pay.kiwify.com.br/Vpfi86k\", price: \"R$ 178,88\"}\n    const Link_2 = { name: <>Assinatura Trimestral <span className=\"break-mobile\">(Caminho da Transformação)</span></>, url: \"https://pay.kiwify.com.br/iYgvDlt\", price: \"R$ 447,00 (em até 3x)\"}\n    const Link_3 = { name: <>Assinatura Semestral <span className=\"break-mobile\">(Rota do Sucesso)</span></>, url: \"https://pay.kiwify.com.br/MqxlBNP\", price: \"R$ 789,00 (em até 6x)\"}\n\n    const image = props.data.ProfileImageCampaign.childImageSharp.gatsbyImageData;\n    const treatmentSection = [\n        {\n            title: \"POR QUE NUTRIÇÃO 3.0?\",\n            content: (\n                <>\n                    <p className=\"header-text\">\n                        A Nutrição 3.0 é sobre antecipação, prevenção e longevidade. Diferente da abordagem tradicional que trata doenças já estabelecidas, aqui focamos em retardar ou evitar o aparecimento das principais doenças crônicas que afetam nossa qualidade de vida. Sabemos que, embora o envelhecimento nos torne mais suscetíveis a doenças, podemos viver mais e melhor, cuidando ativamente dos pilares do estilo de vida: alimentação, sono, exercício, manejo do estresse, controle de vícios e relacionamentos saudáveis.\n                    </p>\n                </>\n            ),\n            images: null\n        },\n        {\n            title: \"PARA QUEM É A COMUNIDADE?\",\n            content: (\n                <>\n                    <p className=\"header-text\">\n                        Esta comunidade é para quem deseja tomar as rédeas da sua saúde, adotando um estilo de vida que promove a prevenção e o bem-estar a longo prazo. Se você está cansado de dietas da moda e quer construir hábitos saudáveis de verdade, sem comparações ou pressões irreais, este é o seu lugar. Aqui, você encontrará as ferramentas para começar sua jornada de mudança, com base em ciência e práticas comprovadas, deixando de lado as fake news e informações superficiais.\n                    </p>\n                    \n                </>\n            ),\n            images: null\n        }\n    ];\n\n    const specialFeatures = [\n        {\n            icon: \"fa-solid fa-user-clock\",\n            title: \"Conteúdos Semanais\",\n            description: \"Aulas gravadas e liberação semanal dos novos conteúdos e módulos.\"\n        },\n        {\n            icon: \"fa-solid fa-users\",\n            title: \"Acompanhamento Ativo\",\n            description: \"Desafios práticos e check-ins mensais para garantir que você está aplicando o que aprendeu.\"\n        },\n        {\n            icon: \"fa-solid fa-headset\",\n            title: \"Encontros Mensais ao Vivo\",\n            description: \"Sessões interativas para tirar dúvidas e compartilhar experiências com toda a comunidade, além do suporte da sua mentora.\"\n        }\n\n    ];\n\n    return (\n        <Layout page=\"seja-real-nao-perfeito\">\n            <Header title=\"Thaís Basso\" className=\"home\" page=\"seja-real-nao-perfeito\">\n                <div className=\"d-flex justify-content-center\">\n                    <Link to=\"/\">\n                        <img className=\"logo-home\" src=\"logo-with-name.png\" alt=\"Logo Thaís Basso\" />\n                    </Link>\n                </div>\n            </Header>\n            \n            <Flowery />\n            \n            <AboutMe \n                title=\"SEJA REAL, NÃO PERFEITO\"  \n                subtitle={<>UMA COMUNIDADE SOBRE SAÚDE, NUTRIÇÃO E ESTILO DE VIDA, BASEADA EM EVIDÊNCIAS</>}\n                content={<>Olá, sou Thaís Basso, nutricionista pós-graduada em Nutrição Funcional e Comportamento Alimentar. Minha paixão pela nutrição vem da crença de que ela é uma ferramenta poderosa para transformar vidas, promovendo não apenas longevidade, mas uma vida plena e livre de doenças.</>} \n                image={image}\n                callToAction=\"Inscreva-se agora\"\n                href={Link_1.url}\n            />\n            \n            <Treatment \n                sections={treatmentSection} \n                query={props.data}  \n            />\n            \n            <SpecialFeatures specialFeatures={specialFeatures} />\n\n            <section className=\"investimento my-4\">\n                <Container>\n                    <div className=\"m-3\">\n                        <Row>\n                            <div className=\"col-lg-6 col-md-12\">\n                                <div className=\"my-5\">\n                                    <SectionTitle className=\"text-center\">VOCÊ IRÁ APRENDER NA COMUNIDADE:</SectionTitle>\n                                </div>\n                                <div className=\"my-3 mx-3\">\n                                    <ul className=\"formas-pagamento\">\n                                        <li><b>Saúde Integrada</b>: Entenda como alimentação, sono, exercício e manejo do estresse se conectam para manter sua saúde e prevenir doenças.</li>\n                                        <li><b>Nutrição Baseada em Evidências</b>: Desmistifique dietas radicais e descubra a verdade sobre o que realmente funciona para uma vida saudável.</li>\n                                        <li><b>Autonomia Alimentar</b>: Aprenda a organizar sua alimentação de forma que você tenha liberdade para fazer escolhas conscientes, sem depender de dietas restritivas.</li>\n                                        <li><b>Construção de Hábitos</b>: Descubra como criar e manter hábitos saudáveis que irão sustentar seu bem-estar ao longo da vida.</li>\n                                    </ul>\n                                    <p className=\"mt-3\">INDO ALÉM... Porque aqui acreditamos que o <b>conhecimento é a chave para transformar vidas</b>. Para mudar, primeiro é preciso ter consciência, acesso a informações de qualidade, e a coragem para <b>conquistar a autonomia e liberdade</b> necessárias para fazer <b>mudanças reais e duradouras</b>. Estamos aqui para te guiar nessa jornada!</p>\n                                </div>\n                            </div>\n                            <div className=\"col-lg-6 col-md-12\">\n                                <div className=\"my-5\">\n                                    <SectionTitle className=\"text-center\">QUAL O INVESTIMENTO?</SectionTitle>\n                                </div>\n                                <div className=\"my-3\">\n                                    <div className=\"bigger shadow-custom\">\n                                        <div>\n                                            <h3>{Link_1.name}</h3>\n                                            <span className=\"price\">{Link_1.price}</span>\n                                        </div>\n                                        <div className=\"text-center\">\n                                            <CallToAction \n                                                text=\"Inscrever-me\"\n                                                href={Link_1.url}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"inline shadow-custom\">\n                                        <div>\n                                            <h3>{Link_2.name}</h3>\n                                            <span className=\"price\">{Link_2.price}</span>\n                                        </div>\n                                        <CallToAction \n                                            text=\"Inscrever-me\"\n                                            href={Link_2.url}\n                                        />\n                                    </div>\n                                    <div className=\"inline shadow-custom\">\n                                        <div>\n                                            <h3>{Link_3.name}</h3>\n                                            <span className=\"price\">{Link_3.price}</span>\n                                        </div>\n                                        <CallToAction \n                                            text=\"Inscrever-me\"\n                                            href={Link_3.url}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </Row>\n                    </div>\n                    <h4 className=\"effect-phrase\">\"Estamos aqui para ajudar você a construir uma vida que não seja apenas longa, mas que seja <b>vivida com qualidade, saúde e equilíbrio.</b> Não há momento certo para começar, o melhor momento é agora, quando você decide mudar. Invista no seu futuro hoje!\"</h4>\n                </Container>\n            </section>\n\n            <ActionBanner \n                callToAction=\"Venha fazer parte do nosso grupo\" \n                href={Link_1.url}\n                content={<>Não existe hora certa para começar, a melhor hora é quando você decide mudar.<br/>Comece a investir no seu eu do futuro agora mesmo!</>} \n                text=\"SERÁ UM PRAZER COMPARTILHAR E APRENDER CONTIGO!\" \n                image={<Woman />} \n            />\n        </Layout>\n    );\n}\n\nexport const Head = () => <Seo title=\"Seja Real, Não Perfeito | Thaís Basso\" />;\n\nexport const query = graphql`\n    query Campaing {\n        ProfileImageCampaign: file(relativePath: { eq: \"fotos-thais/waiting-room-square.png\" }) {\n            childImageSharp {\n                gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, formats: [AUTO, WEBP])\n            }\n        }\n\n        plates: allFile(filter: { relativePath: { regex: \"/campaign-first-section/\" } }) {\n            edges {\n                node {\n                    childImageSharp {\n                        gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, formats: [AUTO, WEBP])\n                    }\n                }\n            }\n        }\n\n        foods: allFile(filter: { relativePath: { regex: \"/campaign-second-section/\" } }) {\n            edges {\n                node {\n                    childImageSharp {\n                        gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, formats: [AUTO, WEBP])\n                    }\n                }\n            }\n        }\n    }\n`;","var React = require('react');\n\nfunction UndrawWomanWhite (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M 526.4 329.6 c 19.9 12.8 38.5 30 56 51.2 v 32.4 c -8.5 -2.9 -41 -14.9 -53.9 -33.9 c -14.8 -22 -17.5 -55.3 -5.1 -63.7 c 3.2 -2.2 7.1 -2.4 11.4 -1.3 c 13.5 9.7 26.5 21.5 38.8 35.3 c 4.4 6.7 7.1 15.3 8.8 24 v 0.4 c -16 -22.3 -34.8 -36.7 -56 -44.4 Z\",\"fill\":\"#fbfbfb\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M 525.4 130.6 c 19.9 12.8 38.5 30 56 51.2 v 7.4 c -1.7 -0.6 -4.3 -1.5 -7.4 -2.7 c -14.3 -16.9 -30.6 -28.3 -48.6 -34.9 c 12.6 8.1 24.7 18 36.3 29.5 c -12.3 -5.9 -26.6 -14.7 -34.2 -25.8 c -0.8 -1.2 -1.6 -2.4 -2.3 -3.6 c -12.7 -21.1 -13.5 -44.2 -1.8 -52.1 c 12.4 -8.4 34 3.5 48.9 25.4 c 8.6 12.7 11 32.4 11.5 46.8 c -0.8 1 -1.6 2.1 -2.3 3.2 c -16 -22.3 -34.8 -36.7 -56 -44.4 Z\",\"fill\":\"#fbfbfb\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M 638.6 248.8 v 0 c -1.4 3.9 -3.2 7.9 -5.3 11.8 c -3.1 5.8 -8 11.2 -13.5 16 c -5.9 5.2 -12.5 9.7 -18.6 13.4 c -8.5 5.1 -16 8.6 -18.9 9.9 v -3.1 c 16.9 -20.1 34.8 -36.5 54 -48.8 c -20.3 7.4 -38.4 21 -54 41.7 v -13.9 c 16.9 -20.1 34.8 -36.5 54 -48.8 c -20.3 7.4 -38.4 21 -54 41.7 v -13.9 c 16.7 -19.8 34.4 -36 53.2 -48.3 c 8.8 7.1 9.6 24.3 3 42.3 v 0 Z\",\"fill\":\"#fbfbfb\",\"key\":2}),React.createElement(\"circle\",{\"cx\":\"143.7\",\"cy\":\"245.5\",\"r\":\"143.7\",\"fill\":\"#ff6884\",\"key\":3}),React.createElement(\"path\",{\"id\":\"uuid-9ac3c440-2c29-483e-b5ea-f157a67fda2d-137\",\"d\":\"M 593.9 475.9 c 12.1 10.2 16.6 24.7 10.1 32.4 c -6.5 7.7 -21.5 5.7 -33.6 -4.5 c -4.9 -4 -8.7 -9.1 -11.2 -14.9 l -50.7 -43.8 l 21.1 -23.3 l 47.7 45.6 c 6.1 1.5 11.8 4.4 16.6 8.6 h 0 Z\",\"fill\":\"#fcb4b4\",\"key\":4}),React.createElement(\"polygon\",{\"points\":\"553,443.5 491,364 432.4,256.6 430.8,405.5 518.8,477.7 553,443.5\",\"fill\":\"#2f2e41\",\"key\":5}),React.createElement(\"polygon\",{\"points\":\"283.6,224.6 297.7,160.1 345.2,162.4 357.3,209.2 283.6,224.6\",\"fill\":\"#fcb4b4\",\"key\":6}),React.createElement(\"polygon\",{\"points\":\"283.6,224.6 297.7,160.1 345.2,162.4 357.3,209.2 283.6,224.6\",\"isolation\":\"isolate\",\"opacity\":\".1\",\"key\":7}),React.createElement(\"circle\",{\"cx\":\"320.3\",\"cy\":\"124.3\",\"r\":\"53.1\",\"fill\":\"#fcb4b4\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M 296.5 144.8 v 0 s -5.4 -0.1 -16.5 -2.1 c -11.1 -2.1 8.2 24 8.2 24 c -52.4 -21.9 -35.6 -77.4 -35.6 -77.4 c -53.2 -10.2 -30.9 -57.5 -30.9 -57.5 c 0 0 17.5 -33.8 71.5 -31.7 c 53.9 2.2 28.4 55.3 28.4 55.3 c 35.1 0.1 39.1 31.7 39.1 31.7 c 0 0 -12.7 1.6 -35.7 7.4 c -23 5.8 -28.4 50.3 -28.4 50.3 l 0 0 l 0 0 h 0 Z\",\"fill\":\"#2f2e41\",\"key\":9}),React.createElement(\"path\",{\"d\":\"M 294.4 204.3 l -2.4 -4.7 s -42.7 4.9 -49.7 11.5 s -23 35.5 -23 35.5 l 35 30 l 40.1 -72.3 v 0 Z\",\"fill\":\"#ffb6b6\",\"key\":10}),React.createElement(\"path\",{\"d\":\"M 347.4 203.2 s 32 -8.5 50 9.5 s 39 51 39 51 l -1 26 l -50 -24.1 l -38 -62.4 v 0 Z\",\"fill\":\"#ffb6b6\",\"key\":11}),React.createElement(\"path\",{\"d\":\"M 355.5 199.6 s 41.8 -15 68.8 17 s 35 133 35 133 c 0 0 61 187 46 189 s -106.5 7.5 -106.5 7.5 l -31.5 -203.5 l -14 -143 h 2.2 v 0 Z\",\"fill\":\"#2f2e41\",\"key\":12}),React.createElement(\"path\",{\"d\":\"M 259.4 379.6 l -10 36 l 136 10 s -5 -30.1 0 -41 l -126 -5 Z\",\"fill\":\"#fcb4b4\",\"key\":13}),React.createElement(\"polygon\",{\"points\":\"336.4,613.6 342.4,699.6 417.9,697.6 415.4,610.6 336.4,613.6\",\"fill\":\"#fcb4b4\",\"key\":14}),React.createElement(\"polygon\",{\"points\":\"218.5,605.1 196.4,698.6 275.4,698.1 295.6,621.7 218.5,605.1\",\"fill\":\"#fcb4b4\",\"key\":15}),React.createElement(\"path\",{\"d\":\"M 353.4 199.6 h -61.3 l -49.7 66 l 11 135 s 25 -7 60 -7 h 75 s -11 -35 3 -49 s 4 -79 4 -79 l -42 -66 v 0 Z\",\"fill\":\"#fbfbfb\",\"key\":16}),React.createElement(\"path\",{\"d\":\"M 244.4 404.6 l -56 203 s 82.5 33.1 132.2 23.6 s 117.8 -12.6 117.8 -12.6 l -48 -206 l -146 -8 v 0 Z\",\"fill\":\"#2f2e41\",\"key\":17}),React.createElement(\"path\",{\"id\":\"uuid-73c6c48b-3ad6-4bf4-ae9b-2aead64e96c3-138\",\"d\":\"M 373.9 478.9 c 12.1 10.2 16.6 24.7 10.1 32.4 c -6.5 7.7 -21.5 5.7 -33.6 -4.5 c -4.9 -4 -8.7 -9.1 -11.2 -14.9 l -50.7 -43.8 l 21.1 -23.3 l 47.7 45.6 c 6.1 1.5 11.8 4.4 16.6 8.6 Z\",\"fill\":\"#fcb4b4\",\"key\":18}),React.createElement(\"polygon\",{\"points\":\"343,443.5 281,364 222.4,256.6 220.8,405.5 308.8,477.7 343,443.5\",\"fill\":\"#2f2e41\",\"key\":19}),React.createElement(\"path\",{\"d\":\"M 296.2 199.6 s -41.8 -15 -68.8 17 s -35 133 -35 133 c 0 0 -61 187 -46 189 s 106.5 7.5 106.5 7.5 l 31.5 -203.5 l 14 -143 h -2.2 v 0 Z\",\"fill\":\"#2f2e41\",\"key\":20}),React.createElement(\"rect\",{\"x\":\"581.4\",\"y\":\"161.6\",\"width\":\"2\",\"height\":\"348\",\"fill\":\"rgb(255, 255, 255)\",\"key\":21}),React.createElement(\"path\",{\"d\":\"M 27.4 518.6 c 19.9 12.8 38.5 30 56 51.2 v 32.4 c -8.5 -2.9 -41 -14.9 -53.9 -33.9 c -14.8 -22 -17.5 -55.3 -5.1 -63.7 c 3.2 -2.2 7.1 -2.4 11.4 -1.3 c 13.5 9.7 26.5 21.5 38.8 35.3 c 4.4 6.7 7.1 15.3 8.8 24 v 0.4 c -16 -22.3 -34.8 -36.7 -56 -44.4 Z\",\"fill\":\"#fbfbfb\",\"key\":22}),React.createElement(\"path\",{\"d\":\"M 26.4 319.6 c 19.9 12.8 38.5 30 56 51.2 v 7.4 c -1.7 -0.6 -4.3 -1.5 -7.4 -2.7 c -14.3 -16.9 -30.6 -28.3 -48.6 -34.9 c 12.6 8.1 24.7 18 36.3 29.5 c -12.3 -5.9 -26.6 -14.7 -34.2 -25.8 c -0.8 -1.2 -1.6 -2.4 -2.3 -3.6 c -12.7 -21.1 -13.5 -44.2 -1.8 -52.1 c 12.4 -8.4 34 3.5 48.9 25.4 c 8.6 12.7 11 32.4 11.5 46.8 c -0.8 1 -1.6 2.1 -2.3 3.2 c -16 -22.3 -34.8 -36.7 -56 -44.4 Z\",\"fill\":\"#fbfbfb\",\"key\":23}),React.createElement(\"path\",{\"d\":\"M 139.6 437.8 v 0 c -1.4 3.9 -3.2 7.9 -5.3 11.8 c -3.1 5.8 -8 11.2 -13.5 16 c -5.9 5.2 -12.5 9.7 -18.6 13.4 c -8.5 5.1 -16 8.6 -18.9 9.9 v -3.1 c 16.9 -20.1 34.8 -36.5 54 -48.8 c -20.3 7.4 -38.4 21 -54 41.7 v -13.9 c 16.9 -20.1 34.8 -36.5 54 -48.8 c -20.3 7.4 -38.4 21 -54 41.7 v -13.9 c 16.7 -19.8 34.4 -36 53.2 -48.3 c 8.8 7.1 9.6 24.3 3 42.3 Z\",\"fill\":\"#fbfbfb\",\"key\":24}),React.createElement(\"rect\",{\"x\":\"82.4\",\"y\":\"350.6\",\"width\":\"2\",\"height\":\"348\",\"fill\":\"rgb(255, 255, 255)\",\"key\":25})]);\n}\n\nUndrawWomanWhite.defaultProps = {\"width\":\"643\",\"height\":\"699.6\",\"viewBox\":\"0 0 642.99652 699.63874\"};\n\nmodule.exports = UndrawWomanWhite;\n\nUndrawWomanWhite.default = UndrawWomanWhite;\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","e","t","a","Boolean","images","fallback","src","gatsbyImageData","gatsbyImage","childImageSharp","z","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","G","children","u","V","B","U","srcSet","decoding","Y","sources","sizes","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","PageTitle","props","React","title","subtitle","SectionTitle","SectionText","Row","Container","CallToAction","href","target","rel","buttonClassName","text","Footer","Link","to","Layout","page","Seo","data","useStaticQuery","description","site","siteMetadata","charSet","name","content","Header","Section","AboutMe","logo","callToAction","GatsbyImage","Treatment","constructImages","listName","queryData","edges","edge","index","getImage","node","query","plates","foods","sections","undefined","section","ActionBanner","Flowery","floweryImage","SpecialFeatures","specialFeatures","icon","feature","sejaRealNaoPerfeito","Link_1","url","price","Link_2","Link_3","ProfileImageCampaign","treatmentSection","Woman","Head","UndrawWomanWhite","createElement","defaultProps","default"],"sourceRoot":""}